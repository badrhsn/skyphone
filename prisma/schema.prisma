// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  id_token          String? @db.Text
  scope             String?
  session_state     String?
  expires_at        Int?
  token_type        String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                  String   @id @default(cuid())
  name                String?
  email               String   @unique
  password            String?
  emailVerified       DateTime?
  image               String?
  balance             Float    @default(0)
  isAdmin             Boolean  @default(false)
  autoTopupEnabled    Boolean  @default(false)
  autoTopupThreshold  Float    @default(2.0)
  autoTopupAmount     Float    @default(10.0)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  accounts            Account[]
  sessions            Session[]
  calls               Call[]
  payments            Payment[]
  phoneNumbers        PhoneNumber[]
  contacts            Contact[]
  callerIDs           CallerID[]
  configurationAudits ConfigurationAudit[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Call {
  id           String   @id @default(cuid())
  userId       String
  fromNumber   String
  toNumber     String
  country      String
  duration     Int      @default(0)
  cost         Float
  status       String   @default("INITIATED")
  callerIdType String   @default("public")
  twilioSid    String?
  recordingSid String?
  recordingUrl String?
  metadata     String?  @db.Text
  createdAt    DateTime @default(now())
  endedAt      DateTime?
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
  @@index([callerIdType])
}

model CallRate {
  id              String   @id @default(cuid())
  country         String
  countryCode     String
  callerIdCountry String
  flag            String?
  rate            Float
  currency        String   @default("USD")
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([countryCode, callerIdCountry])
  @@index([callerIdCountry])
}

model Payment {
  id              String        @id @default(cuid())
  userId          String
  amount          Float
  currency        String        @default("USD")
  status          PaymentStatus @default(PENDING)
  stripePaymentId String?
  stripeSessionId String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model CallAnalytics {
  id            String              @id @default(cuid())
  phoneNumber   String
  countryCode   String?
  provider      String
  status        CallAnalyticsStatus
  callSid       String?
  failureReason String?
  responseTime  Int?
  createdAt     DateTime            @default(now())

  @@index([provider])
  @@index([countryCode])
  @@index([createdAt])
}

model ProviderStatus {
  id              String   @id @default(cuid())
  provider        String   @unique
  isActive        Boolean  @default(true)
  successRate     Float    @default(100.0)
  avgResponseTime Int      @default(0)
  lastChecked     DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PhoneNumber {
  id           String          @id @default(cuid())
  userId       String
  phoneNumber  String          @unique
  country      String
  countryCode  String
  city         String?
  type         PhoneNumberType @default(LOCAL)
  monthlyPrice Float
  setupFee     Float
  isActive     Boolean         @default(true)
  twilioSid    String?
  capabilities String
  purchaseDate DateTime        @default(now())
  nextBilling  DateTime
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  user         User            @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([isActive])
}

model Contact {
  id          String   @id @default(cuid())
  userId      String
  name        String
  phoneNumber String
  email       String?
  country     String?
  notes       String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([phoneNumber])
}

model CallerID {
  id                     String         @id @default(cuid())
  userId                 String
  phoneNumber            String
  country                String?
  friendlyName           String?
  status                 CallerIDStatus @default(PENDING)
  verificationCode       String?
  verificationCodeExpiry DateTime?
  verificationAttempts   Int            @default(0)
  verifiedAt             DateTime?
  isActive               Boolean        @default(false)
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  user                   User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, phoneNumber])
  @@index([userId])
  @@index([status])
}

model ApiConfiguration {
  id          String    @id @default(cuid())
  provider    String    @unique
  configData  String    @db.Text
  isActive    Boolean   @default(true)
  environment String    @default("production")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lastUsed    DateTime?
  version     String    @default("1.0")
  description String?

  @@index([provider])
  @@index([environment])
}

model ConfigurationAudit {
  id              String   @id @default(cuid())
  configurationId String
  action          String
  userId          String?
  previousValue   String?  @db.Text
  metadata        String?  @db.Text
  ipAddress       String?
  userAgent       String?
  createdAt       DateTime @default(now())
  user            User?    @relation(fields: [userId], references: [id])

  @@index([configurationId])
  @@index([action])
  @@index([createdAt])
}

enum CallStatus {
  INITIATED
  RINGING
  ANSWERED
  COMPLETED
  FAILED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}

enum CallAnalyticsStatus {
  SUCCESS
  FAILOVER_SUCCESS
  FAILOVER_FAILED
  FAILED
}

enum PhoneNumberType {
  LOCAL
  TOLL_FREE
  MOBILE
}

enum CallerIDStatus {
  PENDING
  VERIFYING
  VERIFIED
  FAILED
  EXPIRED
}