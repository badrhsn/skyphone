// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  balance       Float     @default(0)
  isAdmin       Boolean   @default(false)
  autoTopupEnabled    Boolean @default(false)
  autoTopupThreshold  Float   @default(2.0)
  autoTopupAmount     Float   @default(10.0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  calls    Call[]
  payments Payment[]
  phoneNumbers PhoneNumber[]
  contacts Contact[]
  callerIds CallerID[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Call {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  fromNumber  String
  toNumber    String
  country     String
  duration    Int      @default(0) // in seconds
  cost        Float
  status      CallStatus @default(INITIATED)
  callerIdType String  @default("public") // public, custom, bought, verified
  twilioSid   String?
  recordingSid String?  // Twilio recording SID
  recordingUrl String?  // URL to access recording
  metadata    String?  // JSON metadata for caller ID info
  createdAt   DateTime @default(now())
  endedAt     DateTime?

  @@index([userId])
  @@index([createdAt])
  @@index([callerIdType])
}

model CallRate {
  id          String  @id @default(cuid())
  country     String
  countryCode String
  flag        String? // Country flag emoji
  rate        Float   // per minute
  currency    String  @default("USD")
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([countryCode])
}

model Payment {
  id            String        @id @default(cuid())
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  amount        Float
  currency      String        @default("USD")
  status        PaymentStatus @default(PENDING)
  stripePaymentId String?
  stripeSessionId String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([userId])
}

enum CallStatus {
  INITIATED
  RINGING
  ANSWERED
  COMPLETED
  FAILED
  CANCELLED
}

model CallAnalytics {
  id            String   @id @default(cuid())
  phoneNumber   String
  countryCode   String?
  provider      String   // twilio, telnyx, vonage
  status        CallAnalyticsStatus
  callSid       String?
  failureReason String?
  responseTime  Int?     // milliseconds
  createdAt     DateTime @default(now())

  @@index([provider])
  @@index([countryCode])
  @@index([createdAt])
}

model ProviderStatus {
  id              String   @id @default(cuid())
  provider        String   @unique
  isActive        Boolean  @default(true)
  successRate     Float    @default(100.0) // percentage
  avgResponseTime Int      @default(0) // milliseconds
  lastChecked     DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}

enum CallAnalyticsStatus {
  SUCCESS
  FAILOVER_SUCCESS  
  FAILOVER_FAILED
  FAILED
}

model PhoneNumber {
  id            String   @id @default(cuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  phoneNumber   String   @unique
  country       String
  countryCode   String
  city          String?
  type          PhoneNumberType @default(LOCAL)
  monthlyPrice  Float
  setupFee      Float
  isActive      Boolean  @default(true)
  twilioSid     String?  // Twilio phone number SID
  capabilities  String   // JSON string of capabilities
  purchaseDate  DateTime @default(now())
  nextBilling   DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
  @@index([isActive])
}

enum PhoneNumberType {
  LOCAL
  TOLL_FREE
  MOBILE
}

model Contact {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String
  phoneNumber String
  email       String?
  country     String?
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([phoneNumber])
}

model CallerID {
  id              String          @id @default(cuid())
  userId          String
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  phoneNumber     String
  country         String?
  friendlyName    String?         // User-defined name for this caller ID
  status          CallerIDStatus  @default(PENDING)
  verificationCode String?        // SMS/Call verification code
  verificationCodeExpiry DateTime? // Expiry time for verification code
  verificationAttempts Int         @default(0)
  verifiedAt      DateTime?
  isActive        Boolean         @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  @@unique([userId, phoneNumber])
  @@index([userId])
  @@index([status])
}

enum CallerIDStatus {
  PENDING
  VERIFYING
  VERIFIED
  FAILED
  EXPIRED
}